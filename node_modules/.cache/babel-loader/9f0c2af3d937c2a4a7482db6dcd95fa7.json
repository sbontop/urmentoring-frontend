{"ast":null,"code":"import \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/menu/style\";\nimport _Menu from \"antd/es/menu\";\nimport \"antd/es/typography/style\";\nimport _Typography from \"antd/es/typography\";\nvar _jsxFileName = \"C:\\\\Users\\\\Home\\\\Desktop\\\\app-urmentoring-view\\\\src\\\\components\\\\Usuario\\\\Autores.js\";\nimport React from 'react';\n// import Header from './Header';\nimport WrappedEditableTable from './WrappedEditableTable';\nimport MetodosAxios from '../../requerimientos/MetodosAxios';\nconst Title = _Typography.Title;\nconst SubMenu = _Menu.SubMenu;\nexport default class Autores extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.obtener_autor = id_autor_seleccionado => {\n      this.state.autores.map(autor => {\n        if (autor.id === id_autor_seleccionado) {\n          this.setState({\n            autor_seleccionado: autor\n          }, () => {\n            console.log('this.state.autor_seleccionado', this.state.autor_seleccionado);\n          });\n        }\n      });\n    };\n\n    this.handleClick = e => {\n      let id_autor_seleccionado = parseInt(e.key);\n      /**\r\n       * Llamo a una funcion del hijo\r\n       */\n      // this.childRef.current.showAlert();\n\n      this.obtener_autor(id_autor_seleccionado);\n      this.setState({\n        carga_tabla: true\n      }, () => {\n        console.log('this.state.carga_tabla', this.state.carga_tabla);\n      });\n    };\n\n    this.generar_autores = () => {\n      let autores = [];\n\n      for (let i = 0; i < 5; i++) {\n        let autor = {\n          id: i,\n          nombre: \"Autor \".concat(i)\n        };\n        autores.push(autor);\n      }\n\n      this.setState({\n        autores: autores\n      }, () => {// console.log('this.state.autores', this.state.autores);\n      });\n    };\n\n    this.obtener_libroautores = () => {\n      let libroautores = [];\n      MetodosAxios.obtener_libroautores().then(res => {\n        // console.log(res);\n        this.setState({\n          libroautores: res.data\n        }, () => {\n          console.log('this.state.libroautores', this.state.libroautores);\n        });\n      });\n    };\n\n    this.obtener_autores = () => {\n      let autores = [];\n      MetodosAxios.obtener_autores().then(res => {\n        // console.log(res);\n        this.setState({\n          autores: res.data\n        }, () => {\n          console.log('this.state.autores', this.state.autores);\n        });\n      });\n    };\n\n    this.obtener_libros = () => {\n      let libros = [];\n      MetodosAxios.obtener_libros().then(res => {\n        // console.log(res);\n        this.setState({\n          libros: res.data\n        }, () => {\n          console.log('this.state.libros', this.state.libros);\n        });\n      });\n    };\n\n    this.componentDidMount = () => {\n      this.obtener_autores();\n      this.obtener_libros();\n      this.obtener_libroautores(); // this.generar_autores();\n    };\n\n    this.state = {\n      autores: [],\n      libros: [],\n      libroautores: [],\n      autor_seleccionado: undefined,\n      carga_tabla: false\n    };\n    this.wrappedEditableTableElement = React.createRef();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Autores\"), React.createElement(_Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      lg: {\n        span: 4\n      },\n      md: {\n        span: 4\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(_Menu, {\n      onClick: this.handleClick // style={{ width: 256 }}\n      ,\n      defaultSelectedKeys: ['1'],\n      defaultOpenKeys: ['submenu'],\n      mode: \"inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(SubMenu, {\n      key: \"submenu\",\n      title: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(_Icon, {\n        type: \"user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Autores\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, this.state.autores && this.state.autores.map(autor => {\n      return React.createElement(_Menu.Item, {\n        key: autor.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, autor.nombre);\n    })))), React.createElement(_Col, {\n      lg: {\n        span: 16,\n        offset: 2\n      },\n      md: {\n        span: 16,\n        offset: 2\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, this.state.carga_tabla && React.createElement(WrappedEditableTable, {\n      key: Math.random(),\n      ref: this.wrappedEditableTableElement,\n      autor_seleccionado: this.state.autor_seleccionado,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Home\\Desktop\\app-urmentoring-view\\src\\components\\Usuario\\Autores.js"],"names":["React","WrappedEditableTable","MetodosAxios","Title","SubMenu","Autores","Component","constructor","props","obtener_autor","id_autor_seleccionado","state","autores","map","autor","id","setState","autor_seleccionado","console","log","handleClick","e","parseInt","key","carga_tabla","generar_autores","i","nombre","push","obtener_libroautores","libroautores","then","res","data","obtener_autores","obtener_libros","libros","componentDidMount","undefined","wrappedEditableTableElement","createRef","render","span","offset","Math","random"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  Typography, Card, Descriptions, Row, Col, Rate, Menu, Icon, Table, Divider,\r\n  Tag, Button, Dropdown, Label, InputNumber, Popconfirm, Form, Input\r\n} from 'antd';\r\n// import Header from './Header';\r\nimport WrappedEditableTable from './WrappedEditableTable'\r\nimport MetodosAxios from '../../requerimientos/MetodosAxios';\r\n\r\nconst { Title } = Typography;\r\nconst { SubMenu } = Menu;\r\n\r\nexport default class Autores extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      autores: [],\r\n      libros: [],\r\n      libroautores: [],\r\n      autor_seleccionado: undefined,\r\n      carga_tabla: false,\r\n    };\r\n    this.wrappedEditableTableElement = React.createRef();\r\n  }\r\n\r\n  obtener_autor = (id_autor_seleccionado) => {    \r\n    this.state.autores.map( autor => {      \r\n      if (autor.id === id_autor_seleccionado) {\r\n        this.setState({\r\n          autor_seleccionado: autor,\r\n        }, () => {\r\n          console.log('this.state.autor_seleccionado', this.state.autor_seleccionado);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  handleClick = e => {\r\n    let id_autor_seleccionado = parseInt(e.key);  \r\n    /**\r\n     * Llamo a una funcion del hijo\r\n     */\r\n    // this.childRef.current.showAlert();\r\n\r\n    this.obtener_autor(id_autor_seleccionado);\r\n    this.setState({\r\n      carga_tabla: true,\r\n    }, () => {\r\n      console.log('this.state.carga_tabla', this.state.carga_tabla);\r\n    });\r\n  };\r\n\r\n  generar_autores = () => {\r\n    let autores = [];\r\n    for (let i = 0; i < 5; i++) {\r\n      let autor = {\r\n        id: i,\r\n        nombre: `Autor ${i}`\r\n      }\r\n      autores.push(autor);\r\n    }\r\n    this.setState({\r\n      autores: autores,\r\n    }, () => {\r\n      // console.log('this.state.autores', this.state.autores);\r\n    })\r\n  }\r\n\r\n  obtener_libroautores = () => {\r\n    let libroautores = [];\r\n    MetodosAxios.obtener_libroautores().then( res => {\r\n      // console.log(res);\r\n      this.setState({\r\n        libroautores: res.data,\r\n      }, () => {\r\n        console.log('this.state.libroautores', this.state.libroautores);\r\n      });\r\n    });\r\n  }\r\n\r\n  obtener_autores = () => {\r\n    let autores = [];\r\n    MetodosAxios.obtener_autores().then( res => {\r\n      // console.log(res);\r\n      this.setState({\r\n        autores: res.data,\r\n      }, () => {\r\n        console.log('this.state.autores', this.state.autores);\r\n      });\r\n    });\r\n  }\r\n\r\n  obtener_libros = () => {\r\n    let libros = [];\r\n    MetodosAxios.obtener_libros().then( res => {\r\n      // console.log(res);\r\n      this.setState({\r\n        libros: res.data,\r\n      }, () => {\r\n        console.log('this.state.libros', this.state.libros);\r\n      });\r\n    });\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.obtener_autores();\r\n    this.obtener_libros();\r\n    this.obtener_libroautores();\r\n    // this.generar_autores();\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <Header /> */}\r\n        <Title>Autores</Title>\r\n        <Row>\r\n          {/*INICIO MENU*/}\r\n          <Col lg={{ span: 4 }} md={{ span: 4 }}>\r\n            <Menu\r\n              onClick={this.handleClick}\r\n              // style={{ width: 256 }}\r\n              defaultSelectedKeys={['1']}\r\n              defaultOpenKeys={['submenu']}\r\n              mode=\"inline\"\r\n            >\r\n              <SubMenu\r\n                key=\"submenu\"\r\n                title={\r\n                  <span>\r\n                    <Icon type=\"user\" />\r\n                    <span>Autores</span>\r\n                  </span>\r\n                }\r\n              >\r\n\r\n                {\r\n                  this.state.autores &&\r\n                  this.state.autores.map(autor => {\r\n                    return (\r\n                      <Menu.Item\r\n                        key={autor.id}                      \r\n                      >\r\n                        {autor.nombre}\r\n                      </Menu.Item>\r\n                    )\r\n                  })\r\n                }\r\n              </SubMenu>\r\n            </Menu>\r\n          </Col>\r\n          {/*FIN MENU*/}\r\n          <Col lg={{ span: 16, offset: 2 }} md={{ span: 16, offset: 2 }}>\r\n            {\r\n              this.state.carga_tabla &&\r\n              <WrappedEditableTable\r\n                key={Math.random()}\r\n                ref={this.wrappedEditableTableElement}\r\n                autor_seleccionado ={this.state.autor_seleccionado}\r\n              />\r\n            }            \r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}