{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/popconfirm/style\";\nimport _Popconfirm from \"antd/es/popconfirm\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/divider/style\";\nimport _Divider from \"antd/es/divider\";\nimport \"antd/es/rate/style\";\nimport _Rate from \"antd/es/rate\";\nimport \"antd/es/menu/style\";\nimport _Menu from \"antd/es/menu\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"C:\\\\Users\\\\Home\\\\Desktop\\\\app-urmentoring-view\\\\src\\\\components\\\\Usuario\\\\WrappedEditableTable.js\";\nimport React from 'react';\nimport MetodosAxios from '../../requerimientos/MetodosAxios';\nconst FormItem = _Form.Item;\nconst SubMenu = _Menu.SubMenu;\n\nfunction handleMenuClick(e) {\n  console.log('click', e);\n}\n\nconst menu = React.createElement(_Menu, {\n  onClick: handleMenuClick,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, React.createElement(_Menu.Item, {\n  key: \"1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, \"Editar\"), React.createElement(_Menu.Item, {\n  key: \"2\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, \"Eliminar\"));\n\nclass EditableTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeRating = rating => {\n      this.setState({\n        rating: rating\n      }, () => {\n        console.log('this.state.rating', this.state.rating);\n      });\n    };\n\n    this.obtener_libros = () => {\n      let libros = [];\n      MetodosAxios.obtener_libros().then(res => {\n        // console.log(res)\n        res.data.map(registro => {\n          let libro = {\n            titulo: registro.titulo,\n            isbn: registro.isbn,\n            rating: 0\n          };\n          libros.push(libro);\n        }); // console.log('libros', libros);\n\n        this.setState({\n          libros: libros\n        }, () => {\n          console.log('this.state.libros', this.state.libros);\n          this.obtener_libroautores(parseInt(this.props.autor_seleccionado.id));\n          this.obtener_historico(this.props.autor_seleccionado.nombres);\n        });\n      });\n    };\n\n    this.obtener_libroautores = id_autor_seleccionado => {\n      let libroautores = [];\n      MetodosAxios.obtener_libroautores().then(libros_del_autor => {\n        // console.log('libros_del_autor', libros_del_autor);\n        libros_del_autor.data.map(libroautor => {\n          let id_autor = libroautor.id; // console.log('id_autor_seleccionado, id_autor', id_autor_seleccionado, id_autor);\n\n          if (id_autor_seleccionado === id_autor) {\n            // console.log('autores iguales');\n            this.state.libros.map(libro => {\n              // console.log('libroautor.isbn, libro.isbn', libroautor.isbn, libro.isbn);\n              if (libroautor.isbn === libro.isbn) {\n                // console.log('libros iguales');              \n                libro.key = \"id_autor-\".concat(id_autor, \"-id_libro-\").concat(libro.isbn);\n                libro.isEditing = false; // console.log('libro', libro);\n\n                libroautores.push(libro);\n              }\n            });\n          }\n        });\n        /**\r\n        * Aqui terminan los dos lazos\r\n        */\n        // console.log('libroautores', libroautores);\n\n        this.setState({\n          data: libroautores,\n          loading: false\n        }, () => {\n          console.log('this.state.data', this.state.data);\n        });\n      });\n    };\n\n    this.obtener_historico = nombre_autor => {\n      let libros_del_autor = [];\n      MetodosAxios.obtener_historico(nombre_autor).then(historico => {\n        // console.log('historico', historico);\n        historico.data.map(libro => {\n          let libro_del_autor = {\n            key: libro.isbn,\n            titulo: libro.titulo,\n            isbn: libro.isbn,\n            rating: 0,\n            isEditing: false\n          };\n          libros_del_autor.push(libro_del_autor);\n        });\n        console.log(libros_del_autor);\n        this.setState({\n          data: libros_del_autor\n        }, () => {\n          console.log('this.state.data', this.state.data);\n        });\n      });\n    };\n\n    this.componentDidMount = () => {\n      this.obtener_libros();\n    };\n\n    this.isEditing = record => {\n      return record.key === this.state.editingKey;\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, row) => {\n        if (err) return;\n        console.log('row', row);\n        let item = undefined;\n        this.state.data.map(registro => {\n          if (registro.key === this.state.editingKey) {\n            item = registro;\n          }\n        });\n        console.log('item', item);\n        let rows = this.state.data;\n        rows.map(obj => {\n          console.log('obj.key, item.key', obj.key, item.key);\n\n          if (obj.key === item.key) {\n            /**\r\n             * Edito unicamente el rating \r\n             */\n            obj.rating = row.rating;\n            console.log('ENVIO FORMULARIO', obj);\n            this.setState({\n              data: rows\n            }, () => {\n              console.log('this.state.data', this.state.data);\n            });\n          }\n        });\n      }); // INICIO cerrar la edicion\n\n      let rows = [];\n      this.state.data.map(obj => {\n        obj.isEditing = false;\n        rows.push(obj);\n      });\n      this.setState({\n        editingKey: \"\",\n        data: rows\n      }); // FIN cerrar la edicion\n    };\n\n    this.cancel = () => {\n      let rows = [];\n      this.state.data.map(obj => {\n        obj.isEditing = false;\n        rows.push(obj);\n      });\n      this.setState({\n        editingKey: \"\",\n        data: rows\n      });\n    };\n\n    this.state = {\n      data: [],\n      libros: [],\n      libroautores: [],\n      calificaciones: [],\n      editingKey: \"\",\n      loading: true,\n      rating: -1\n    };\n    this.handleChangeRating = this.handleChangeRating.bind(this);\n  }\n\n  delete(key) {\n    let rows = this.state.data; // console.log('rows', rows);\n\n    console.log('ANTES DE ELIMINAR UNA FILA: this.state.data', this.state.data);\n\n    for (let i = 0; i < rows.length; i++) {\n      if (rows[i].key === key) rows.splice(i, 1);\n    } // console.log('rows', rows);\n\n\n    this.setState({\n      data: rows\n    }, () => {\n      console.log('DESPUES DE ELIMINAR UNA FILA: this.state.data', this.state.data);\n    });\n  }\n\n  edit(key) {\n    let rows = [];\n    this.state.data.map(obj => {\n      if (obj.key === key) obj.isEditing = true;else obj.isEditing = false;\n      rows.push(obj);\n    });\n    this.setState({\n      editingKey: key,\n      data: rows\n    });\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(_Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(_Table, {\n      dataSource: this.state.data,\n      columns: [{\n        title: 'Titulo',\n        dataIndex: 'titulo',\n        editable: false,\n        render: (text, record) => {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 239\n            },\n            __self: this\n          }, text);\n        }\n      }, {\n        title: 'ISBN',\n        dataIndex: 'isbn',\n        key: 'isbn',\n        editable: false,\n        render: (text, record) => {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 248\n            },\n            __self: this\n          }, text);\n        }\n      }, {\n        title: 'Rating',\n        key: 'rating',\n        dataIndex: 'rating',\n        editable: false,\n        render: (text, record) => {\n          if (record.isEditing) {\n            return React.createElement(FormItem, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 258\n              },\n              __self: this\n            }, getFieldDecorator('rating', {\n              rules: [{\n                required: true,\n                message: \"Por favor ingrese el rating!\"\n              }],\n              initialValue: record.rating\n            })(React.createElement(_Rate, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 268\n              },\n              __self: this\n            })));\n          } else return React.createElement(_Rate, {\n            disabled: true,\n            defaultValue: record.rating,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 272\n            },\n            __self: this\n          });\n        }\n      }, {\n        title: 'Action',\n        key: 'action',\n        render: (text, record) => {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 280\n            },\n            __self: this\n          }, record.isEditing == false && React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 283\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            onClick: () => this.edit(record.key),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 284\n            },\n            __self: this\n          }, \"Editar\"), React.createElement(_Divider, {\n            type: \"vertical\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 285\n            },\n            __self: this\n          }), React.createElement(\"a\", {\n            onClick: () => this.delete(record.key),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 286\n            },\n            __self: this\n          }, \"Eliminar\")), record.isEditing && React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 291\n            },\n            __self: this\n          }, React.createElement(_Button, {\n            htmlType: \"submit\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 292\n            },\n            __self: this\n          }, \"Aceptar\"), React.createElement(_Divider, {\n            type: \"vertical\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 296\n            },\n            __self: this\n          }), React.createElement(_Popconfirm, {\n            title: \"\\xBFSeguro de Cancelar?\",\n            onConfirm: () => this.cancel(record.key),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 297\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 298\n            },\n            __self: this\n          }, \"Cancelar\"))));\n        }\n      }],\n      bordered: true,\n      loading: this.state.loading,\n      rowClassName: \"editable-row\",\n      title: () => \"Autor:  \".concat(this.props.autor_seleccionado.nombres),\n      footer: () => \"N\\xFAmero de libros encontrados: \".concat(this.state.data.length) // showHeader\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst WrappedEditableTable = _Form.create({})(EditableTable);\n\nexport default WrappedEditableTable;","map":{"version":3,"sources":["C:\\Users\\Home\\Desktop\\app-urmentoring-view\\src\\components\\Usuario\\WrappedEditableTable.js"],"names":["React","MetodosAxios","FormItem","Item","SubMenu","handleMenuClick","e","console","log","menu","EditableTable","Component","constructor","props","handleChangeRating","rating","setState","state","obtener_libros","libros","then","res","data","map","registro","libro","titulo","isbn","push","obtener_libroautores","parseInt","autor_seleccionado","id","obtener_historico","nombres","id_autor_seleccionado","libroautores","libros_del_autor","libroautor","id_autor","key","isEditing","loading","nombre_autor","historico","libro_del_autor","componentDidMount","record","editingKey","handleSubmit","preventDefault","form","validateFields","err","row","item","undefined","rows","obj","cancel","calificaciones","bind","delete","i","length","splice","edit","render","getFieldDecorator","title","dataIndex","editable","text","rules","required","message","initialValue","WrappedEditableTable","create"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  Table,\r\n  Form,\r\n  Input,\r\n  InputNumber,\r\n  DatePicker,\r\n  Button,\r\n  message,\r\n  Rate,\r\n  Dropdown,\r\n  Menu,\r\n  Icon,\r\n  Popconfirm,\r\n  Divider,\r\n} from \"antd\";\r\nimport MetodosAxios from '../../requerimientos/MetodosAxios';\r\n\r\nconst FormItem = Form.Item;\r\nconst { SubMenu } = Menu;\r\n\r\nfunction handleMenuClick(e) {\r\n  console.log('click', e);\r\n}\r\n\r\nconst menu = (\r\n  <Menu onClick={handleMenuClick}>\r\n    <Menu.Item key=\"1\">Editar</Menu.Item>\r\n    <Menu.Item key=\"2\">Eliminar</Menu.Item>\r\n  </Menu>\r\n);\r\n\r\nclass EditableTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      libros: [],\r\n      libroautores: [],\r\n      calificaciones: [],\r\n      editingKey: \"\",\r\n      loading: true,\r\n      rating: -1,\r\n    }\r\n    this.handleChangeRating = this.handleChangeRating.bind(this);\r\n  }\r\n\r\n  handleChangeRating = rating => {\r\n    this.setState({\r\n      rating: rating,\r\n    }, () => {\r\n      console.log('this.state.rating', this.state.rating);\r\n    });\r\n  }\r\n\r\n  obtener_libros = () => {\r\n    let libros = [];\r\n    MetodosAxios.obtener_libros().then(res => {\r\n      // console.log(res)\r\n      res.data.map(registro => {\r\n        let libro = {\r\n          titulo: registro.titulo,\r\n          isbn: registro.isbn,\r\n          rating: 0,\r\n        };\r\n        libros.push(libro);\r\n      });\r\n      // console.log('libros', libros);\r\n      this.setState({\r\n        libros: libros,\r\n      }, () => {\r\n        console.log('this.state.libros', this.state.libros);\r\n        this.obtener_libroautores(parseInt(this.props.autor_seleccionado.id));\r\n        this.obtener_historico(this.props.autor_seleccionado.nombres);\r\n      });\r\n    });\r\n  }\r\n\r\n  obtener_libroautores = (id_autor_seleccionado) => {\r\n    let libroautores = [];\r\n    MetodosAxios.obtener_libroautores().then(libros_del_autor => {\r\n      // console.log('libros_del_autor', libros_del_autor);\r\n      libros_del_autor.data.map(libroautor => {\r\n        let id_autor = libroautor.id;\r\n        // console.log('id_autor_seleccionado, id_autor', id_autor_seleccionado, id_autor);\r\n        if (id_autor_seleccionado === id_autor) {\r\n          // console.log('autores iguales');\r\n          this.state.libros.map(libro => {\r\n            // console.log('libroautor.isbn, libro.isbn', libroautor.isbn, libro.isbn);\r\n            if (libroautor.isbn === libro.isbn) {\r\n              // console.log('libros iguales');              \r\n              libro.key = `id_autor-${id_autor}-id_libro-${libro.isbn}`;\r\n              libro.isEditing = false;\r\n              // console.log('libro', libro);\r\n              libroautores.push(libro);\r\n            }\r\n          });\r\n        }\r\n      });\r\n      /**\r\n      * Aqui terminan los dos lazos\r\n      */\r\n      // console.log('libroautores', libroautores);\r\n      this.setState({\r\n        data: libroautores,\r\n        loading: false,\r\n      }, () => {\r\n        console.log('this.state.data', this.state.data);\r\n      });\r\n    });\r\n  }\r\n\r\n  obtener_historico = (nombre_autor) => {\r\n    let libros_del_autor = [];\r\n    MetodosAxios.obtener_historico(nombre_autor).then(historico => {\r\n      // console.log('historico', historico);\r\n      historico.data.map(libro => {\r\n        let libro_del_autor = {\r\n          key: libro.isbn,\r\n          titulo: libro.titulo,\r\n          isbn: libro.isbn,\r\n          rating: 0,\r\n          isEditing: false,\r\n        };\r\n        libros_del_autor.push(libro_del_autor);\r\n      })\r\n      console.log(libros_del_autor);\r\n      this.setState({\r\n        data: libros_del_autor,\r\n      }, () => {\r\n        console.log('this.state.data', this.state.data);\r\n      });\r\n    });\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.obtener_libros();\r\n  }\r\n\r\n  isEditing = record => {\r\n    return record.key === this.state.editingKey;\r\n  };\r\n\r\n  delete(key) {\r\n    let rows = this.state.data;\r\n    // console.log('rows', rows);\r\n    console.log('ANTES DE ELIMINAR UNA FILA: this.state.data', this.state.data);\r\n    for (let i = 0; i < rows.length; i++) {\r\n      if (rows[i].key === key)\r\n        rows.splice(i, 1)\r\n    }\r\n    // console.log('rows', rows);\r\n    this.setState({\r\n      data: rows,\r\n    }, () => {\r\n      console.log('DESPUES DE ELIMINAR UNA FILA: this.state.data', this.state.data);\r\n    })\r\n  }\r\n\r\n  edit(key) {\r\n    let rows = [];\r\n    this.state.data.map(obj => {\r\n      if (obj.key === key)\r\n        obj.isEditing = true\r\n      else\r\n        obj.isEditing = false\r\n      rows.push(obj)\r\n    })\r\n    this.setState({ editingKey: key, data: rows });\r\n  }\r\n\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, row) => {\r\n      if (err)\r\n        return\r\n      console.log('row', row);\r\n\r\n      let item = undefined;\r\n      this.state.data.map(registro => {\r\n        if (registro.key === this.state.editingKey) {\r\n          item = registro;\r\n        }\r\n      });\r\n      console.log('item', item);\r\n\r\n      let rows = this.state.data;\r\n      rows.map(obj => {\r\n        console.log('obj.key, item.key', obj.key, item.key);\r\n        if (obj.key === item.key) {\r\n          /**\r\n           * Edito unicamente el rating \r\n           */\r\n          obj.rating = row.rating;\r\n          console.log('ENVIO FORMULARIO', obj);\r\n          this.setState({\r\n            data: rows,\r\n          }, () => {\r\n            console.log('this.state.data', this.state.data);\r\n          });\r\n        }\r\n      });\r\n\r\n\r\n    })\r\n\r\n    // INICIO cerrar la edicion\r\n    let rows = [];\r\n    this.state.data.map(obj => {\r\n      obj.isEditing = false\r\n      rows.push(obj)\r\n    })\r\n    this.setState({ editingKey: \"\", data: rows });\r\n    // FIN cerrar la edicion\r\n  }\r\n\r\n  cancel = () => {\r\n    let rows = [];\r\n    this.state.data.map(obj => {\r\n      obj.isEditing = false\r\n      rows.push(obj)\r\n    })\r\n    this.setState({ editingKey: \"\", data: rows });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <Table\r\n          dataSource={this.state.data}\r\n          columns={[\r\n            {\r\n              title: 'Titulo',\r\n              dataIndex: 'titulo',\r\n              editable: false,\r\n              render: (text, record) => {\r\n                return <span>{text}</span>\r\n              }\r\n            },\r\n            {\r\n              title: 'ISBN',\r\n              dataIndex: 'isbn',\r\n              key: 'isbn',\r\n              editable: false,\r\n              render: (text, record) => {\r\n                return <span>{text}</span>\r\n              }\r\n            },\r\n            {\r\n              title: 'Rating',\r\n              key: 'rating',\r\n              dataIndex: 'rating',\r\n              editable: false,\r\n              render: (text, record) => {\r\n                if (record.isEditing) {\r\n                  return <FormItem>\r\n                    {getFieldDecorator('rating', {\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          message: `Por favor ingrese el rating!`\r\n                        }\r\n                      ],\r\n                      initialValue: record.rating\r\n                    })(\r\n                      <Rate />\r\n                    )}\r\n                  </FormItem>\r\n                } else\r\n                  return <Rate disabled defaultValue={record.rating} />\r\n              }\r\n            },\r\n            {\r\n              title: 'Action',\r\n              key: 'action',\r\n              render: (text, record) => {\r\n                return (\r\n                  <div>\r\n                    {\r\n                      record.isEditing == false &&\r\n                      <span>\r\n                        <a onClick={() => this.edit(record.key)}>Editar</a>\r\n                        <Divider type=\"vertical\" />\r\n                        <a onClick={() => this.delete(record.key)}>Eliminar</a>\r\n                      </span>\r\n                    }\r\n                    {\r\n                      record.isEditing &&\r\n                      <span>\r\n                        <Button htmlType=\"submit\">Aceptar</Button>\r\n                        {/*<Popconfirm title=\"¿Seguro de Aceptar?\" onConfirm={() => this.handleSubmit(record)}>\r\n                          <a>Aceptar</a>\r\n                        </Popconfirm>*/}\r\n                        <Divider type=\"vertical\" />\r\n                        <Popconfirm title=\"¿Seguro de Cancelar?\" onConfirm={() => this.cancel(record.key)}>\r\n                          <a>Cancelar</a>\r\n                        </Popconfirm>\r\n                      </span>\r\n                    }\r\n                  </div>\r\n                )\r\n              }\r\n            },\r\n          ]}\r\n          bordered\r\n          loading={this.state.loading}\r\n          rowClassName=\"editable-row\"\r\n          title={() => `Autor:  ${this.props.autor_seleccionado.nombres}`}\r\n          footer={() => `Número de libros encontrados: ${this.state.data.length}`}\r\n        // showHeader\r\n        />\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nconst WrappedEditableTable = Form.create({})(EditableTable);\r\nexport default WrappedEditableTable;"]},"metadata":{},"sourceType":"module"}